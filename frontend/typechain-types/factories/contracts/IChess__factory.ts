/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IChess, IChessInterface } from "../../contracts/IChess";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
    ],
    name: "checkBishopValidMoves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkEndgame",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
    ],
    name: "checkForCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
    ],
    name: "checkKingValidMoves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
    ],
    name: "checkKnightValidMoves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "move",
        type: "uint16",
      },
    ],
    name: "checkMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "opponentState",
        type: "uint32",
      },
    ],
    name: "checkPawnValidMoves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
    ],
    name: "checkQueenValidMoves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
    ],
    name: "checkRookValidMoves",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
    ],
    name: "commitMove",
    outputs: [
      {
        internalType: "uint256",
        name: "newGameState",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "convertToCircuit",
    outputs: [
      {
        internalType: "uint256[112]",
        name: "",
        type: "uint256[112]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
    ],
    name: "getHorizontalMovement",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
    ],
    name: "getInBetweenMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getLegalMoves",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "pos",
        type: "uint8",
      },
    ],
    name: "getPositionMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
    ],
    name: "getVerticalMovement",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "pos",
        type: "uint8",
      },
    ],
    name: "pieceAtPosition",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "pos",
        type: "uint8",
      },
    ],
    name: "pieceUnderAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "move",
        type: "uint16",
      },
    ],
    name: "playMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "opponentState",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "pBitOffset",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "bitSize",
        type: "uint16",
      },
    ],
    name: "searchPiece",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_betting",
        type: "address",
      },
    ],
    name: "setBetting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "pos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "piece",
        type: "uint8",
      },
    ],
    name: "setPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
    ],
    name: "verifyExecuteBishopMove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
    ],
    name: "verifyExecuteKingMove",
    outputs: [
      {
        internalType: "uint256",
        name: "newGameState",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "newPlayerState",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
    ],
    name: "verifyExecuteKnightMove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "move",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "playerState",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "opponentState",
        type: "uint32",
      },
    ],
    name: "verifyExecutePawnMove",
    outputs: [
      {
        internalType: "uint256",
        name: "newGameState",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "newPlayerState",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
    ],
    name: "verifyExecuteQueenMove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromPos",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toPos",
        type: "uint8",
      },
    ],
    name: "verifyExecuteRookMove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameState",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "pos",
        type: "uint8",
      },
    ],
    name: "zeroPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IChess__factory {
  static readonly abi = _abi;
  static createInterface(): IChessInterface {
    return new utils.Interface(_abi) as IChessInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IChess {
    return new Contract(address, _abi, signerOrProvider) as IChess;
  }
}
