// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.9;
import "hardhat/console.sol";

interface Hasher {
    function poseidon(uint256[2] calldata leftRight)
        external
        pure
        returns (uint256);
}

contract Validator {

    Hasher public poseidonContract;
    address public chessContract;
    address public verifierContract;
    uint256 public inputHash;
    uint256 public outputHash;
    uint16[] public legalMoveIndicies;
    int16 public nextLegalMoveIndex;
    uint public winningMoveIndex;
    int256 public winningMoveValue;
    uint public lastChunkEndIndex;

    uint public constant INPUT_LEN = 112;
    uint public constant OUTPUT_LEN = 1858;

    int256 public constant MODULUS = 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001;
    uint256 public constant TWO_INV = 0x183227397098d014dc2822db40c0ac2e9419f4243cdcb848a1f0fac9f8000001;

    uint16[1858] public moveMapArray = [4094,4093,4092,4091,4090,4089,4088,4087,4086,4085,4079,4078,4077,4071,4068,4063,4059,4055,4050,4047,4041,4039,4032,4031,4029,4028,4027,4026,4025,4024,4023,4022,4021,4020,4015,4014,4013,4012,4006,4003,3998,3994,3990,3985,3982,3976,3974,3967,3966,3964,3963,3962,3961,3960,3959,3958,3957,3956,3955,3951,3950,3949,3948,3947,3941,3938,3933,3929,3925,3920,3917,3909,3903,3902,3901,3899,3898,3897,3896,3894,3893,3892,3891,3890,3886,3885,3884,3883,3882,3879,3876,3873,3868,3864,3860,3852,3844,3839,3838,3837,3836,3834,3833,3832,3829,3828,3827,3826,3825,3821,3820,3819,3818,3817,3814,3811,3808,3807,3803,3795,3787,3779,3775,3774,3773,3772,3771,3769,3768,3764,3763,3762,3761,3760,3756,3755,3754,3753,3752,3749,3746,3742,3738,3735,3730,3722,3714,3711,3710,3709,3708,3707,3706,3704,3699,3698,3697,3696,3691,3690,3689,3688,3684,3681,3677,3673,3670,3665,3663,3657,3649,3647,3646,3645,3644,3643,3642,3641,3634,3633,3632,3626,3625,3624,3619,3616,3612,3608,3605,3600,3598,3592,3591,3584,3583,3582,3581,3574,3573,3572,3571,3570,3569,3568,3567,3566,3565,3559,3558,3557,3551,3548,3543,3539,3535,3530,3527,3521,3519,3518,3517,3516,3511,3509,3508,3507,3506,3505,3504,3503,3502,3501,3500,3495,3494,3493,3492,3486,3483,3478,3474,3470,3465,3462,3456,3455,3454,3453,3452,3451,3447,3446,3444,3443,3442,3441,3440,3439,3438,3437,3436,3435,3431,3430,3429,3428,3427,3421,3418,3413,3409,3405,3400,3397,3390,3389,3388,3387,3386,3383,3382,3381,3379,3378,3377,3376,3374,3373,3372,3371,3370,3366,3365,3364,3363,3362,3359,3356,3353,3348,3344,3340,3332,3325,3324,3323,3322,3321,3319,3318,3317,3316,3314,3313,3312,3309,3308,3307,3306,3305,3301,3300,3299,3298,3297,3294,3291,3288,3287,3283,3275,3267,3260,3259,3258,3257,3256,3255,3254,3253,3252,3251,3249,3248,3244,3243,3242,3241,3240,3236,3235,3234,3233,3232,3229,3226,3222,3218,3215,3210,3202,3195,3194,3193,3192,3191,3190,3189,3188,3187,3186,3184,3179,3178,3177,3176,3171,3170,3169,3168,3164,3161,3157,3153,3150,3145,3143,3137,3130,3129,3128,3127,3126,3125,3124,3123,3122,3121,3114,3113,3112,3106,3105,3104,3099,3096,3092,3088,3085,3080,3078,3072,3071,3070,3069,3063,3062,3061,3054,3053,3052,3051,3050,3049,3048,3047,3046,3045,3039,3038,3037,3031,3028,3023,3019,3015,3010,3007,3006,3005,3004,2999,2998,2997,2996,2991,2989,2988,2987,2986,2985,2984,2983,2982,2981,2980,2975,2974,2973,2972,2966,2963,2958,2954,2950,2945,2943,2942,2941,2940,2939,2935,2934,2933,2932,2931,2927,2926,2924,2923,2922,2921,2920,2919,2918,2917,2916,2915,2911,2910,2909,2908,2907,2901,2898,2893,2889,2885,2880,2878,2877,2876,2875,2874,2870,2869,2868,2867,2866,2863,2862,2861,2859,2858,2857,2856,2854,2853,2852,2851,2850,2846,2845,2844,2843,2842,2839,2836,2833,2828,2824,2820,2813,2812,2811,2810,2809,2805,2804,2803,2802,2801,2799,2798,2797,2796,2794,2793,2792,2789,2788,2787,2786,2785,2781,2780,2779,2778,2777,2774,2771,2768,2767,2763,2755,2748,2747,2746,2745,2744,2740,2739,2738,2737,2736,2735,2734,2733,2732,2731,2729,2728,2724,2723,2722,2721,2720,2716,2715,2714,2713,2712,2709,2706,2702,2698,2695,2690,2683,2682,2681,2680,2675,2674,2673,2672,2671,2670,2669,2668,2667,2666,2664,2659,2658,2657,2656,2651,2650,2649,2648,2644,2641,2637,2633,2630,2625,2618,2617,2616,2610,2609,2608,2607,2606,2605,2604,2603,2602,2601,2594,2593,2592,2586,2585,2584,2579,2576,2572,2568,2565,2560,2559,2556,2551,2550,2549,2543,2542,2541,2534,2533,2532,2531,2530,2529,2528,2527,2526,2525,2519,2518,2517,2511,2508,2503,2499,2494,2491,2487,2486,2485,2484,2479,2478,2477,2476,2471,2469,2468,2467,2466,2465,2464,2463,2462,2461,2460,2455,2454,2453,2452,2446,2443,2438,2434,2429,2426,2423,2422,2421,2420,2419,2415,2414,2413,2412,2411,2407,2406,2404,2403,2402,2401,2400,2399,2398,2397,2396,2395,2391,2390,2389,2388,2387,2381,2378,2373,2369,2367,2364,2361,2358,2357,2356,2355,2354,2350,2349,2348,2347,2346,2343,2342,2341,2339,2338,2337,2336,2334,2333,2332,2331,2330,2326,2325,2324,2323,2322,2319,2316,2313,2308,2304,2302,2299,2296,2293,2292,2291,2290,2289,2285,2284,2283,2282,2281,2279,2278,2277,2276,2274,2273,2272,2269,2268,2267,2266,2265,2261,2260,2259,2258,2257,2254,2251,2248,2247,2243,2237,2234,2228,2227,2226,2225,2224,2220,2219,2218,2217,2216,2215,2214,2213,2212,2211,2209,2208,2204,2203,2202,2201,2200,2196,2195,2194,2193,2192,2189,2186,2182,2178,2172,2169,2163,2162,2161,2160,2155,2154,2153,2152,2151,2150,2149,2148,2147,2146,2144,2139,2138,2137,2136,2131,2130,2129,2128,2124,2121,2117,2113,2107,2104,2098,2097,2096,2090,2089,2088,2087,2086,2085,2084,2083,2082,2081,2074,2073,2072,2066,2065,2064,2059,2056,2052,2048,2047,2043,2039,2036,2031,2030,2029,2023,2022,2021,2014,2013,2012,2011,2010,2009,2008,2007,2006,2005,1999,1998,1997,1991,1988,1982,1978,1974,1971,1967,1966,1965,1964,1959,1958,1957,1956,1951,1949,1948,1947,1946,1945,1944,1943,1942,1941,1940,1935,1934,1933,1932,1926,1923,1917,1913,1909,1906,1903,1902,1901,1900,1899,1895,1894,1893,1892,1891,1887,1886,1884,1883,1882,1881,1880,1879,1878,1877,1876,1875,1871,1870,1869,1868,1867,1861,1858,1852,1848,1847,1844,1841,1838,1837,1836,1835,1834,1830,1829,1828,1827,1826,1823,1822,1821,1819,1818,1817,1816,1814,1813,1812,1811,1810,1806,1805,1804,1803,1802,1799,1796,1793,1791,1787,1782,1779,1776,1773,1772,1771,1770,1769,1765,1764,1763,1762,1761,1759,1758,1757,1756,1754,1753,1752,1749,1748,1747,1746,1745,1741,1740,1739,1738,1737,1734,1731,1728,1726,1722,1717,1714,1708,1707,1706,1705,1704,1700,1699,1698,1697,1696,1695,1694,1693,1692,1691,1689,1688,1684,1683,1682,1681,1680,1676,1675,1674,1673,1672,1669,1666,1661,1657,1652,1649,1643,1642,1641,1640,1635,1634,1633,1632,1631,1630,1629,1628,1627,1626,1624,1619,1618,1617,1616,1611,1610,1609,1608,1604,1601,1596,1592,1587,1584,1578,1577,1576,1570,1569,1568,1567,1566,1565,1564,1563,1562,1561,1554,1553,1552,1546,1545,1544,1539,1536,1535,1530,1527,1523,1519,1516,1511,1510,1509,1503,1502,1501,1494,1493,1492,1491,1490,1489,1488,1487,1486,1485,1479,1478,1477,1470,1465,1462,1458,1454,1451,1447,1446,1445,1444,1439,1438,1437,1436,1431,1429,1428,1427,1426,1425,1424,1423,1422,1421,1420,1415,1414,1413,1412,1405,1400,1397,1393,1389,1386,1383,1382,1381,1380,1379,1375,1374,1373,1372,1371,1367,1366,1364,1363,1362,1361,1360,1359,1358,1357,1356,1355,1351,1350,1349,1348,1347,1340,1332,1328,1327,1324,1321,1318,1317,1316,1315,1314,1310,1309,1308,1307,1306,1303,1302,1301,1299,1298,1297,1296,1294,1293,1292,1291,1290,1286,1285,1284,1283,1282,1275,1271,1267,1262,1259,1256,1253,1252,1251,1250,1249,1245,1244,1243,1242,1241,1239,1238,1237,1236,1234,1233,1232,1229,1228,1227,1226,1225,1221,1220,1219,1218,1217,1215,1210,1206,1202,1197,1194,1188,1187,1186,1185,1184,1180,1179,1178,1177,1176,1175,1174,1173,1172,1171,1169,1168,1164,1163,1162,1161,1160,1156,1155,1154,1153,1152,1150,1145,1141,1137,1132,1129,1123,1122,1121,1120,1115,1114,1113,1112,1111,1110,1109,1108,1107,1106,1104,1099,1098,1097,1096,1091,1090,1089,1088,1085,1080,1076,1072,1067,1064,1058,1057,1056,1050,1049,1048,1047,1046,1045,1044,1043,1042,1041,1034,1033,1032,1026,1025,1024,1023,1017,1015,1010,1007,1003,999,996,991,990,989,983,982,981,974,973,972,971,970,969,968,967,966,965,958,952,950,945,942,938,934,931,927,926,925,924,919,918,917,916,911,909,908,907,906,905,904,903,902,901,900,893,885,880,877,873,869,866,863,862,861,860,859,855,854,853,852,851,847,846,844,843,842,841,840,839,838,837,836,835,828,820,812,808,807,804,801,798,797,796,795,794,790,789,788,787,786,783,782,781,779,778,777,776,774,773,772,771,770,763,755,751,747,742,739,736,733,732,731,730,729,725,724,723,722,721,719,718,717,716,714,713,712,709,708,707,706,705,698,695,690,686,682,677,674,668,667,666,665,664,660,659,658,657,656,655,654,653,652,651,649,648,644,643,642,641,640,639,633,630,625,621,617,612,609,603,602,601,600,595,594,593,592,591,590,589,588,587,586,584,579,578,577,576,574,568,565,560,556,552,547,544,538,537,536,530,529,528,527,526,525,524,523,522,521,514,513,512,511,504,503,497,495,490,487,483,479,476,471,470,469,463,462,461,454,453,452,451,450,449,448,446,438,432,430,425,422,418,414,411,407,406,405,404,399,398,397,396,391,389,388,387,386,385,384,381,373,365,360,357,353,349,346,343,342,341,340,339,335,334,333,332,331,327,326,324,323,322,321,320,316,308,300,292,288,287,284,281,278,277,276,275,274,270,269,268,267,266,263,262,261,259,258,257,256,251,243,235,231,227,222,219,216,213,212,211,210,209,205,204,203,202,201,199,198,197,196,194,193,192,186,178,175,170,166,162,157,154,148,147,146,145,144,140,139,138,137,136,135,134,133,132,131,129,128,121,119,113,110,105,101,97,92,89,83,82,81,80,75,74,73,72,71,70,69,68,67,66,64,63,56,54,48,45,40,36,32,27,24,18,17,16,10,9,8,7,6,5,4,3,2,1,967,967,967,966,966,966,903,903,903,902,902,902,901,901,901,838,838,838,837,837,837,836,836,836,773,773,773,772,772,772,771,771,771,708,708,708,707,707,707,706,706,706,643,643,643,642,642,642,641,641,641,578,578,578,577,577,577,576,576,576,513,513,513,512,512,512];

    uint16[4095] public reverseMoveMap = [0,1791,1790,1789,1788,1787,1786,1785,1784,1783,1782,0,0,0,0,0,1781,1780,1779,0,0,0,0,0,1778,0,0,1777,0,0,0,0,1776,0,0,0,1775,0,0,0,1774,0,0,0,0,1773,0,0,1772,0,0,0,0,0,1771,0,1770,0,0,0,0,0,0,1769,1768,0,1767,1766,1765,1764,1763,1762,1761,1760,1759,1758,0,0,0,0,1757,1756,1755,1754,0,0,0,0,0,1753,0,0,1752,0,0,0,0,1751,0,0,0,1750,0,0,0,1749,0,0,0,0,1748,0,0,1747,0,0,0,0,0,1746,0,1745,0,0,0,0,0,0,1744,1743,0,1742,1741,1740,1739,1738,1737,1736,1735,1734,1733,0,0,0,1732,1731,1730,1729,1728,0,0,0,0,0,1727,0,0,1726,0,0,0,0,1725,0,0,0,1724,0,0,0,1723,0,0,0,0,1722,0,0,1721,0,0,0,0,0,0,0,1720,0,0,0,0,0,1719,1718,1717,0,1716,1715,1714,1713,0,1712,1711,1710,1709,1708,0,0,0,1707,1706,1705,1704,1703,0,0,1702,0,0,1701,0,0,1700,0,0,0,0,1699,0,0,0,1698,0,0,0,1697,0,0,0,0,0,0,0,1696,0,0,0,0,0,0,0,1695,0,0,0,0,1694,1693,1692,1691,0,1690,1689,1688,0,0,1687,1686,1685,1684,1683,0,0,0,1682,1681,1680,1679,1678,0,0,1677,0,0,1676,0,0,1675,1674,0,0,0,1673,0,0,0,0,0,0,0,1672,0,0,0,0,0,0,0,1671,0,0,0,0,0,0,0,1670,0,0,0,1669,1668,1667,1666,1665,0,1664,1663,0,0,0,1662,1661,1660,1659,1658,0,0,0,1657,1656,1655,1654,1653,0,0,1652,0,0,1651,0,0,0,1650,0,0,0,1649,0,0,1648,0,0,0,0,1647,0,0,0,0,0,0,0,1646,0,0,0,0,0,0,0,1645,0,0,1644,1643,1642,1641,1640,1639,0,1638,0,0,0,0,1637,1636,1635,1634,0,0,0,0,1633,1632,1631,1630,0,0,0,1629,0,0,1628,0,0,0,1627,0,0,0,1626,0,0,1625,0,0,0,0,1624,0,1623,0,0,0,0,0,1622,0,0,0,0,0,0,0,1621,0,1620,1619,1618,1617,1616,1615,1614,0,0,0,0,0,0,1613,1612,1611,0,0,0,0,0,1610,1609,1608,0,0,0,0,1607,0,0,1606,0,0,0,1605,0,0,0,1604,0,0,1603,0,0,0,0,1602,0,1601,0,0,0,0,0,1600,1599,0,0,0,0,0,0,1598,1857,1854,1595,0,0,0,0,0,0,1594,1593,1592,1591,1590,1589,1588,1587,1586,1585,0,0,0,0,0,1584,1583,1582,0,0,0,0,0,1581,0,0,1580,0,0,0,0,1579,0,0,0,1578,0,0,0,1577,0,0,0,0,1576,0,0,1575,0,0,0,0,0,1574,0,1851,1848,1845,1570,0,0,0,0,1569,0,1568,1567,1566,1565,1564,1563,1562,1561,1560,1559,0,0,0,0,1558,1557,1556,1555,0,0,0,0,0,1554,0,0,1553,0,0,0,0,1552,0,0,0,1551,0,0,0,1550,0,0,0,0,1549,0,0,1548,0,0,0,0,0,1547,1546,1842,1839,1836,1542,0,0,0,1541,1540,0,1539,1538,1537,1536,1535,1534,1533,1532,1531,1530,0,0,0,1529,1528,1527,1526,1525,0,0,0,0,0,1524,0,0,1523,0,0,0,0,1522,0,0,0,1521,0,0,0,1520,0,0,0,0,1519,0,0,1518,0,0,0,0,0,0,1517,1833,1830,1827,1513,0,0,1512,1511,1510,0,1509,1508,1507,1506,0,1505,1504,1503,1502,1501,0,0,0,1500,1499,1498,1497,1496,0,0,1495,0,0,1494,0,0,1493,0,0,0,0,1492,0,0,0,1491,0,0,0,1490,0,0,0,0,0,0,0,1489,0,0,0,0,0,0,1488,1824,1821,1818,1484,0,1483,1482,1481,1480,0,1479,1478,1477,0,0,1476,1475,1474,1473,1472,0,0,0,1471,1470,1469,1468,1467,0,0,1466,0,0,1465,0,0,1464,1463,0,0,0,1462,0,0,0,0,0,0,0,1461,0,0,0,0,0,0,0,1460,0,0,0,0,0,0,1459,1815,1812,1809,1455,1454,1453,1452,1451,1450,0,1449,1448,0,0,0,1447,1446,1445,1444,1443,0,0,0,1442,1441,1440,1439,1438,0,0,1437,0,0,1436,0,0,0,1435,0,0,0,1434,0,0,1433,0,0,0,0,1432,0,0,0,0,0,0,0,1431,0,0,0,0,0,0,1430,1806,1803,1800,1426,1425,1424,1423,1422,1421,0,1420,0,0,0,0,1419,1418,1417,1416,0,0,0,0,1415,1414,1413,1412,0,0,0,1411,0,0,1410,0,0,0,1409,0,0,0,1408,0,0,1407,0,0,0,0,1406,0,1405,0,0,0,0,0,1404,0,0,0,0,0,0,1403,1797,1794,1400,1399,1398,1397,1396,1395,1394,0,0,0,0,0,0,1393,1392,1391,0,0,0,0,0,1390,1389,1388,0,0,0,0,1387,0,0,1386,0,0,0,1385,0,0,0,1384,0,0,1383,0,0,0,0,1382,0,1381,0,0,0,0,0,1380,1379,1378,1377,0,0,0,0,0,1376,1375,1374,0,0,0,0,0,0,1373,1372,1371,1370,1369,1368,1367,1366,1365,1364,0,0,0,0,0,1363,1362,1361,0,0,0,0,0,1360,0,0,1359,0,0,0,0,1358,0,0,0,1357,0,0,0,1356,0,0,0,0,1355,0,0,1354,1353,1352,1351,0,0,0,0,1350,1349,1348,1347,0,0,0,0,1346,0,1345,1344,1343,1342,1341,1340,1339,1338,1337,1336,0,0,0,0,1335,1334,1333,1332,0,0,0,0,0,1331,0,0,1330,0,0,0,0,1329,0,0,0,1328,0,0,0,1327,0,0,0,0,1326,0,1325,1324,1323,1322,1321,0,0,0,1320,1319,1318,1317,1316,0,0,0,1315,1314,0,1313,1312,1311,1310,1309,1308,1307,1306,1305,1304,0,0,0,1303,1302,1301,1300,1299,0,0,0,0,0,1298,0,0,1297,0,0,0,0,1296,0,0,0,1295,0,0,0,1294,0,0,0,0,1293,0,1292,1291,1290,1289,1288,0,0,0,1287,1286,1285,1284,1283,0,0,1282,1281,1280,0,1279,1278,1277,1276,0,1275,1274,1273,1272,1271,0,0,0,1270,1269,1268,1267,1266,0,0,1265,0,0,1264,0,0,1263,0,0,0,0,1262,0,0,0,1261,0,0,0,1260,0,0,0,0,0,0,1259,1258,1257,1256,1255,0,0,0,1254,1253,1252,1251,1250,0,1249,1248,1247,1246,0,1245,1244,1243,0,0,1242,1241,1240,1239,1238,0,0,0,1237,1236,1235,1234,1233,0,0,1232,0,0,1231,0,0,1230,1229,0,0,0,1228,0,0,0,0,0,0,0,1227,0,0,0,0,0,0,1226,1225,1224,1223,1222,0,0,0,1221,1220,1219,1218,1217,1216,1215,1214,1213,1212,0,1211,1210,0,0,0,1209,1208,1207,1206,1205,0,0,0,1204,1203,1202,1201,1200,0,0,1199,0,0,1198,0,0,0,1197,0,0,0,1196,0,0,1195,0,0,0,0,1194,0,0,0,0,0,0,1193,1192,1191,1190,0,0,0,0,1189,1188,1187,1186,1185,1184,1183,1182,1181,1180,0,1179,0,0,0,0,1178,1177,1176,1175,0,0,0,0,1174,1173,1172,1171,0,0,0,1170,0,0,1169,0,0,0,1168,0,0,0,1167,0,0,1166,0,0,0,0,1165,0,0,0,0,0,0,1164,1163,1162,0,0,0,0,0,1161,1160,1159,1158,1157,1156,1155,1154,1153,1152,0,0,0,0,0,0,1151,1150,1149,0,0,0,0,0,1148,1147,1146,0,0,0,0,1145,0,0,1144,0,0,0,1143,0,0,0,1142,0,0,1141,0,0,0,0,1140,1139,0,0,1138,0,0,0,0,1137,1136,1135,0,0,0,0,0,1134,1133,1132,0,0,0,0,0,0,1131,1130,1129,1128,1127,1126,1125,1124,1123,1122,0,0,0,0,0,1121,1120,1119,0,0,0,0,0,1118,0,0,1117,0,0,0,0,1116,0,0,0,1115,0,0,0,0,1114,0,0,1113,0,0,0,1112,1111,1110,1109,0,0,0,0,1108,1107,1106,1105,0,0,0,0,1104,0,1103,1102,1101,1100,1099,1098,1097,1096,1095,1094,0,0,0,0,1093,1092,1091,1090,0,0,0,0,0,1089,0,0,1088,0,0,0,0,1087,0,0,0,1086,0,0,0,0,1085,0,0,1084,0,0,1083,1082,1081,1080,1079,0,0,0,1078,1077,1076,1075,1074,0,0,0,1073,1072,0,1071,1070,1069,1068,1067,1066,1065,1064,1063,1062,0,0,0,1061,1060,1059,1058,1057,0,0,0,0,0,1056,0,0,1055,0,0,0,0,1054,0,0,0,1053,0,1052,0,0,1051,0,0,1050,0,0,1049,1048,1047,1046,1045,0,0,0,1044,1043,1042,1041,1040,0,0,1039,1038,1037,0,1036,1035,1034,1033,0,1032,1031,1030,1029,1028,0,0,0,1027,1026,1025,1024,1023,0,0,1022,0,0,1021,0,0,1020,0,0,0,0,1019,0,0,0,1018,0,1017,0,0,1016,0,0,1015,0,0,1014,1013,1012,1011,1010,0,0,0,1009,1008,1007,1006,1005,0,1004,1003,1002,1001,0,1000,999,998,0,0,997,996,995,994,993,0,0,0,992,991,990,989,988,0,0,987,0,0,986,0,0,985,984,0,0,0,983,0,0,0,0,0,982,0,0,981,0,0,0,0,0,980,979,978,977,976,0,0,0,975,974,973,972,971,970,969,968,967,966,0,965,964,0,0,0,963,962,961,960,959,0,0,0,958,957,956,955,954,0,0,953,0,0,952,0,0,0,951,0,0,0,950,0,0,0,0,0,949,0,0,948,0,0,0,0,0,947,946,945,944,0,0,0,0,943,942,941,940,939,938,937,936,935,934,0,933,0,0,0,0,932,931,930,929,0,0,0,0,928,927,926,925,0,0,0,924,0,0,923,0,0,0,922,0,0,0,921,0,0,0,0,0,920,0,0,919,0,0,0,0,0,918,917,916,0,0,0,0,0,915,914,913,912,911,910,909,908,907,906,0,0,0,0,0,0,905,904,903,0,0,0,0,0,902,901,900,0,0,0,0,899,0,0,898,0,0,0,897,0,0,0,896,895,0,0,0,894,0,0,0,893,0,0,892,0,0,0,0,891,890,889,0,0,0,0,0,888,887,886,0,0,0,0,0,0,885,884,883,882,881,880,879,878,877,876,0,0,0,0,0,875,874,873,0,0,0,0,0,872,0,0,871,0,0,0,0,0,870,0,0,0,869,0,0,0,868,0,0,867,0,0,0,866,865,864,863,0,0,0,0,862,861,860,859,0,0,0,0,858,0,857,856,855,854,853,852,851,850,849,848,0,0,0,0,847,846,845,844,0,0,0,0,0,843,0,0,842,0,0,0,0,0,841,0,0,0,840,0,0,0,839,0,0,838,0,0,837,836,835,834,833,0,0,0,832,831,830,829,828,0,0,0,827,826,0,825,824,823,822,821,820,819,818,817,816,0,0,0,815,814,813,812,811,0,0,0,0,0,810,0,0,809,0,0,0,0,0,808,0,0,0,807,806,0,0,805,0,0,804,0,0,803,802,801,800,799,0,0,0,798,797,796,795,794,0,0,793,792,791,0,790,789,788,787,0,786,785,784,783,782,0,0,0,781,780,779,778,777,0,0,776,0,0,775,0,0,774,0,773,0,0,0,772,0,0,0,0,771,0,0,770,0,0,769,0,0,768,767,766,765,764,0,0,0,763,762,761,760,759,0,758,757,756,755,0,754,753,752,0,0,751,750,749,748,747,0,0,0,746,745,744,743,742,0,0,741,0,0,740,0,0,739,0,738,0,0,0,737,0,0,0,0,736,0,0,735,0,0,0,0,0,734,733,732,731,730,0,0,0,729,728,727,726,725,724,723,722,721,720,0,719,718,0,0,0,717,716,715,714,713,0,0,0,712,711,710,709,708,0,0,707,0,0,706,0,0,0,0,705,0,0,0,704,0,0,0,0,703,0,0,702,0,0,0,0,0,701,700,699,698,0,0,0,0,697,696,695,694,693,692,691,690,689,688,0,687,0,0,0,0,686,685,684,683,0,0,0,0,682,681,680,679,0,0,0,678,0,0,677,0,0,0,0,676,0,0,0,675,0,0,0,0,674,0,0,673,0,0,0,0,0,672,671,670,0,0,0,0,0,669,668,667,666,665,664,663,662,661,660,0,0,0,0,0,0,659,658,657,0,0,0,0,0,656,655,654,0,0,0,0,653,0,0,652,651,0,0,0,0,650,0,0,649,0,0,0,648,0,0,0,647,0,0,646,0,0,0,0,645,644,643,0,0,0,0,0,642,641,640,0,0,0,0,0,0,639,638,637,636,635,634,633,632,631,630,0,0,0,0,0,629,628,627,0,0,0,0,0,0,626,0,0,0,0,625,0,0,624,0,0,0,623,0,0,0,622,0,0,621,0,0,0,620,619,618,617,0,0,0,0,616,615,614,613,0,0,0,0,612,0,611,610,609,608,607,606,605,604,603,602,0,0,0,0,601,600,599,598,0,0,0,0,0,0,597,0,0,0,0,596,0,0,595,0,0,0,594,0,0,0,593,0,0,592,0,0,591,590,589,588,587,0,0,0,586,585,584,583,582,0,0,0,581,580,0,579,578,577,576,575,574,573,572,571,570,0,0,0,569,568,567,566,565,0,0,0,0,0,0,564,0,0,0,0,0,0,0,563,0,0,0,562,561,0,0,560,0,0,559,0,0,558,557,556,555,554,0,0,0,553,552,551,550,549,0,0,548,547,546,0,545,544,543,542,0,541,540,539,538,537,0,0,0,536,535,534,533,532,0,0,0,0,0,0,531,0,0,0,530,0,0,0,529,0,0,0,0,528,0,0,527,0,0,526,0,0,525,524,523,522,521,0,0,0,520,519,518,517,516,0,515,514,513,512,0,511,510,509,0,0,508,507,506,505,504,0,0,0,503,502,501,500,499,0,498,0,0,0,0,497,0,0,0,496,0,0,0,495,0,0,0,0,494,0,0,493,0,0,0,0,0,492,491,490,489,488,0,0,0,487,486,485,484,483,482,481,480,479,478,0,477,476,0,0,0,475,474,473,472,471,0,0,0,470,469,468,467,466,0,465,0,0,0,0,464,0,0,0,463,0,0,0,462,0,0,0,0,461,0,0,460,0,0,0,0,0,459,458,457,456,0,0,0,0,455,454,453,452,451,450,449,448,447,446,0,445,0,0,0,0,444,443,442,441,0,0,0,0,440,439,438,437,0,0,436,0,0,0,0,435,0,0,0,434,0,0,0,433,0,0,0,0,432,0,0,431,0,0,0,0,0,430,429,428,0,0,0,0,0,427,426,425,424,423,422,421,420,419,418,0,0,0,0,0,0,417,416,415,0,0,0,0,0,414,413,412,411,0,0,0,0,0,410,0,409,0,0,0,0,408,0,0,407,0,0,0,406,0,0,0,405,0,0,404,0,0,0,0,403,402,401,0,0,0,0,0,400,399,398,0,0,0,0,0,0,397,396,395,394,393,392,391,390,389,388,0,0,0,0,0,0,387,0,0,0,0,0,386,0,385,0,0,0,0,384,0,0,383,0,0,0,382,0,0,0,381,0,0,380,0,0,0,379,378,377,376,0,0,0,0,375,374,373,372,0,0,0,0,371,0,370,369,368,367,366,365,364,363,362,361,0,0,0,0,0,0,360,0,0,0,0,0,0,0,359,0,0,0,0,358,0,0,357,0,0,0,356,0,0,0,355,0,0,354,0,0,353,352,351,350,349,0,0,0,348,347,346,345,344,0,0,0,343,342,0,341,340,339,338,337,336,335,334,333,332,0,0,0,0,0,0,331,0,0,0,0,0,0,0,330,0,0,0,0,0,0,0,329,0,0,0,328,327,0,0,326,0,0,325,0,0,324,323,322,321,320,0,0,0,319,318,317,316,315,0,0,314,313,312,0,311,310,309,308,0,307,306,305,304,303,0,0,0,0,0,0,302,0,0,0,0,0,0,0,301,0,0,0,300,0,0,0,299,0,0,0,0,298,0,0,297,0,0,296,0,0,295,294,293,292,291,0,0,0,290,289,288,287,286,0,285,284,283,282,0,281,280,279,0,0,278,277,276,275,274,0,0,0,0,0,0,273,0,0,272,0,0,0,0,271,0,0,0,270,0,0,0,269,0,0,0,0,268,0,0,267,0,0,0,0,0,266,265,264,263,262,0,0,0,261,260,259,258,257,256,255,254,253,252,0,251,250,0,0,0,249,248,247,246,245,244,0,0,0,0,0,243,0,0,242,0,0,0,0,241,0,0,0,240,0,0,0,239,0,0,0,0,238,0,0,237,0,0,0,0,0,236,235,234,233,0,0,0,0,232,231,230,229,228,227,226,225,224,223,0,222,0,0,0,0,221,220,219,218,0,217,0,0,0,0,0,216,0,0,215,0,0,0,0,214,0,0,0,213,0,0,0,212,0,0,0,0,211,0,0,210,0,0,0,0,0,209,208,207,0,0,0,0,0,206,205,204,203,202,201,200,199,198,197,0,0,0,0,0,0,196,195,194,193,0,0,0,0,0,0,192,191,0,0,0,0,0,190,0,189,0,0,0,0,188,0,0,187,0,0,0,186,0,0,0,185,0,0,184,0,0,0,0,183,182,181,0,0,0,0,0,180,179,178,0,0,0,0,0,0,177,176,175,174,173,172,171,0,170,0,0,0,0,0,0,0,169,0,0,0,0,0,168,0,167,0,0,0,0,166,0,0,165,0,0,0,164,0,0,0,163,0,0,162,0,0,0,161,160,159,158,0,0,0,0,157,156,155,154,0,0,0,0,153,0,152,151,150,149,148,147,0,0,146,0,0,0,0,0,0,0,145,0,0,0,0,0,0,0,144,0,0,0,0,143,0,0,142,0,0,0,141,0,0,0,140,0,0,139,0,0,138,137,136,135,134,0,0,0,133,132,131,130,129,0,0,0,128,127,0,126,125,124,123,122,0,0,0,121,0,0,0,0,0,0,0,120,0,0,0,0,0,0,0,119,0,0,0,0,0,0,0,118,0,0,0,117,116,0,0,115,0,0,114,0,0,113,112,111,110,109,0,0,0,108,107,106,105,104,0,0,103,102,101,0,100,99,98,97,0,0,0,0,96,0,0,0,0,0,0,0,95,0,0,0,0,0,0,0,94,0,0,0,93,0,0,0,92,0,0,0,0,91,0,0,90,0,0,89,0,0,88,87,86,85,84,0,0,0,83,82,81,80,79,0,78,77,76,75,0,74,73,72,0,0,0,0,0,71,0,0,0,0,0,0,0,70,0,0,69,0,0,0,0,68,0,0,0,67,0,0,0,66,0,0,0,0,65,0,0,64,0,0,0,0,0,63,62,61,60,59,0,0,0,58,57,56,55,54,53,52,51,50,49,0,48,47,0,0,0,0,0,0,46,0,45,0,0,0,0,0,44,0,0,43,0,0,0,0,42,0,0,0,41,0,0,0,40,0,0,0,0,39,0,0,38,0,0,0,0,0,37,36,35,34,0,0,0,0,33,32,31,30,29,28,27,26,25,24,0,23,22,0,0,0,0,0,0,21,0,20,0,0,0,0,0,19,0,0,18,0,0,0,0,17,0,0,0,16,0,0,0,15,0,0,0,0,14,0,0,13,0,0,0,0,0,12,11,10,0,0,0,0,0,9,8,7,6,5,4,3,2,1,0];

    constructor (Hasher _poseidonContract, address _verifierContract, address _chessContract) {
        poseidonContract = _poseidonContract;
        verifierContract = _verifierContract;
        chessContract = _chessContract;
        //testing only
        //legalMoveIndicies = [0, 5, 1804];
    }

    function setLegalMoveIndicies(uint16[] calldata _legalMoves) public {
        require(msg.sender == chessContract);
        delete legalMoveIndicies;

        for (uint8 i = 0; i < _legalMoves.length; i++) {
            legalMoveIndicies.push(reverseMoveMap[_legalMoves[i]]);
        }

        nextLegalMoveIndex = -1;
        advanceNextLegalMoveIndex();
    }

    function hashInputs(uint256[INPUT_LEN] calldata inputs) public {
        require(msg.sender == chessContract);
        uint256 _inputHash = poseidonContract.poseidon([inputs[0], inputs[1]]);

        for(uint i = 2; i < INPUT_LEN; i++) {
            _inputHash = poseidonContract.poseidon([_inputHash, inputs[i]]);
        }

        inputHash = _inputHash;
    }

    function hashOutputChunk(uint256[] calldata outputChunk, uint16 chunkStart, uint16 chunkEnd) public {
        require(chunkStart == lastChunkEndIndex, "Must start chunk where last chunk ended");
        require(chunkEnd <= OUTPUT_LEN, "cannot chunk past output length for leela nn");
        uint256 currHash = outputHash;
        uint16 init = 0;

        if (outputHash == 0) {
            currHash = poseidonContract.poseidon([outputChunk[0], outputChunk[1]]);
            init = 2;

            //init winningMoveValue
            winningMoveIndex = 0;
            winningMoveValue = -1_000_000_000_000;

            if (nextLegalMoveIndex == 0) {
                winningMoveValue = feltToInt(outputChunk[0]);
                advanceNextLegalMoveIndex();
            }
            if (nextLegalMoveIndex == 1) {
                int256 outputInt = feltToInt(outputChunk[1]);
                if (winningMoveValue < outputInt) {
                    winningMoveValue = outputInt;
                    winningMoveIndex = 1;
                }
                advanceNextLegalMoveIndex();
            }
        }

        for (uint16 i = init; i < chunkEnd - chunkStart; i++) {
            if (int16(i + chunkStart) == nextLegalMoveIndex) {
                advanceNextLegalMoveIndex();
                int256 outputInt = feltToInt(outputChunk[i]);
                if (outputInt > winningMoveValue) {
                    winningMoveIndex = i + chunkStart;
                    winningMoveValue = outputInt;
                }
            }
            currHash = poseidonContract.poseidon([currHash, outputChunk[i]]);
        }

        outputHash = currHash;
        lastChunkEndIndex = chunkEnd;
    }

    function resetOutputHashing() public {
        outputHash = 0;
        lastChunkEndIndex = 0;
        winningMoveIndex = 0;
        winningMoveValue = 0;
        nextLegalMoveIndex = -1;
        advanceNextLegalMoveIndex();
    }

    function advanceNextLegalMoveIndex() private {
        uint16 currHeighestIndex = 10000;
        for (uint i = 0; i < legalMoveIndicies.length; i++) {
            if (int16(legalMoveIndicies[i]) > nextLegalMoveIndex) {
                if (legalMoveIndicies[i] < currHeighestIndex) {
                    currHeighestIndex = legalMoveIndicies[i];
                }
            }
        }
        nextLegalMoveIndex = int16(currHeighestIndex);
    }

    function verify(bytes calldata proof, bytes calldata instances) public returns (uint16) {
        require(inputHash != 0, "inputs not ingested!");
        require(outputHash != 0, "outputs not ingested!");
        require(lastChunkEndIndex == OUTPUT_LEN, "outputs not ingested!");

        (bool success, ) = verifierContract.call(abi.encodePacked(instances, inputHash, outputHash, proof));
        require(success, "proof did not verify!");

        inputHash = 0;
        outputHash = 0;
        lastChunkEndIndex = 0;
        uint16 verifiedMove = moveMapArray[winningMoveIndex];
        winningMoveIndex = 0;
        winningMoveValue = 0;
        return verifiedMove;
    }

    function feltToInt(uint256 felt) private pure returns (int256) {
        if (felt > TWO_INV) {
            return (int256(felt) - MODULUS);
        } else {
            return int256(felt);
        }
    }
}